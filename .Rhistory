d_names[d_names$check == 0,]
d_names$v[33] <- "Florida Intl"
d_names$check[33] <- -1
d_names[d_names$check == 0,]
d_names$v[41] <- "TAM C. Christi"
d_names$check[41] <- -1
d_names[d_names$check == 0,]
d_names[d_names$check == 0,]
lst <- name_list("LongIsland", list, n =5 )
print(lst)
list[grepl("Island", list)]
list[grepl("Long", list)]
lst <- name_list("Northwestern", list, n =5 )
print(lst)
list[grepl("Louisiana", list)]
list[grepl("Northwestern", list)]
list[grepl("LA", list)]
d_names[d_names$check == 0,]
d_names$v[49] <- "Northwestern LA"
d_names$check[49] <- -1
d_names[d_names$check == 0,]
list[grepl("Carolina", list)]
list[grepl("Arkansas", list)]
list[grepl("Little Rock", list)]
d_names$v[56] <- Ark Little Rock
d_names$check[56] <- 1
d_names$v[56] <- "Ark Little Rock"
d_names$check[56] <- 1
d_names
d_names <- d_names[1:58,]
length(unique(d_names$v))
d_names
length(unique(d_names$v[d_names$check == 1]))
sum(d_names$check == 1])
sum(d_names$check == 1)
head(MTeams_sorted)
#The names in d_names with check = 1 get assigned as a second scores name
MTeams_sorted$scores2 <- NA
d_names1 <- d_names[d_names$check ==1,]
d_names1
L <- length(d_names1$v)
head(M_Teams_sorted)
head(MTeams_sorted)
L <- length(d_names1$v)
for (j in 1:L){
team_row <- d_names1$v[j]
M_teams_sorted[MTeams_sorted$TeamName == team_row] <- d_names1$teams_scores2[j]
}
for (j in 1:L){
team_row <- d_names1$v[j]
MTeams_sorted[MTeams_sorted$TeamName == team_row] <- d_names1$teams_scores2[j]
}
team_row
d_names1$teams_scores2[j]
d_names1$v[[j]]
for (j in 1:L){
team_row <- d_names1$v[[j]]
MTeams_sorted[MTeams_sorted$TeamName == team_row] <- d_names1$teams_scores2[j]
}
MTeams_sorted[MTeams_sorted$TeamName == team_row]
head(MTeams_sorted)
L <- length(d_names1$v)
for (j in 1:L){
team_row <- d_names1$v[[j]]
MTeams_sorted[MTeams_sorted$TeamName == team_row, "scores2"] <- d_names1$teams_scores2[j]
}
View(MTeams_sorted)
View(d_names1)
d_names
d_names$check[10] <-0
length(unique(d_names$v[d_names$check == 1]))
sum(d_names$check == 1)
#The names in d_names with check = 1 get assigned as a second scores name
MTeams_sorted$scores2 <- NA
d_names1 <- d_names[d_names$check ==1,]
L <- length(d_names1$v)
for (j in 1:L){
team_row <- d_names1$v[[j]]
MTeams_sorted[MTeams_sorted$TeamName == team_row, "scores2"] <- d_names1$teams_scores2[j]
}
#The names in d_names with check = 1- get matched with the correct row from Unmatched
head(MTeams_sorted)
head(Unmatched)
d_names2 <- d_names[d_names$check < 0]
d_names2
d_names2 <- d_names[d_names$check < 0,]
d_names2
Unmatched2 <- Unmatched[Unmatched$TeamName %in% d_names2$v,]
Unmatched2
Unmatched2$v <- 0
Unmatched2$v2 <- 0
Unmatched2$scores2 <- NA
L <- length(d_names2$v)
d_names2$v[[j]]
j = 1
d_names2$v[[j]]
head(Unmatched2)
Unmatched2$scores <- NA
head(Unmatched2)
d_names2
L <- length(d_names2$v)
for (j in 1:L){
team_row <- d_names2$v[[j]]
Unmatched2[Unmatched2$TeamName == team_row, "scores"] <- d_names2$teams_scores2[j]
}
Unmatched2
head(MTeams_sorted)
MTeams_sorted <- rbind(MTeams_sorted, Unmatched2)
tail(MTeams_sorted)
#Try to match unclaimed names in bartorvik2 to the sorted team names:
names <- as.character(rep(0, 9))
#Try to match unclaimed names in bartorvik2 to the sorted team names:
names <- as.character(rep(0, 9))
for (j in 1:9){
bar <- bartorvik2[j]
names[j] <- name_match(bar, MTeams$scores)
}
d_bar <- data.frame(cbind(bartorvik2, names))
d_bar
View(Unmatched)
tail(MTeams_sorted)
MTeams_sorted$bartorvik[MTeams_sorted$scores == "UMKC"] <- "UMKC"
tail(MTeams_sorted)
MTeams_sorted$bartorvik[MTeams_sorted$scores == "TexasA&MCorpus"] <- "Texas A&M Corpus Chris"
tail(MTeams_sorted)
bartorvik2
MTeams_sorted$bartorvik[MTeams_sorted$scores == "FloridaIntl"] <- "FIU"
View(Unmatched)
name_search("Arkansas", teams_scores)
name_search("Arkansas", teams_bartorvik)
d <- Unmatched[Unmatched$TeamName == "Cent Arkansas"]
d <- Unmatched[Unmatched$TeamName == "Cent Arkansas",]
d
d$scores[1] <- "Central Arkansas"
d$scores[1] <- "CentralArkansas"
head(MTeams_sorted)
d$scores2[1] <- NA
d$v <- 0
d$v2 <- 0
d
MTeams_sorted <- rbind(MTeams_sorted, d)
tail(MTeams_sorted)
#How many bartorvik ids still need matching
bartorvik3 <- bartorvik2[!(bartorvik2 %in% MTeams_sorted$bartorvik)]
teams_scores3 <- teams_scores2[!(teams_scores2 %in% MTeams_sorted$scores)]
teams_scores3 <- teams_scores3[!(teams_scores3 %in% MTeams_sorted$scores2)]
bartorvik3
teams_scores3
tail(MTeams_sorted)
MTeams_sorted$scores2[MTeams_sorted$scores == "TexasA&MCorpus"] <- "TexasAMCorpus"
tail(MTeams_sorted)
#How many bartorvik ids still need matching
bartorvik3 <- bartorvik2[!(bartorvik2 %in% MTeams_sorted$bartorvik)]
teams_scores3 <- teams_scores2[!(teams_scores2 %in% MTeams_sorted$scores)]
teams_scores3 <- teams_scores3[!(teams_scores3 %in% MTeams_sorted$scores2)]
bartorvik3
teams_scores3
#We have 4 from bartorvik and 11 from scores
MTeams_sorted$scores2[MTeams_sorted$scores == "NorthwesternSt"] <- "NorthweternState"
tail(MTeams_sorted)
#We have 4 from bartorvik and 11 from scores
MTeams_sorted$scores2[MTeams_sorted$scores == "NorthwesternSt"] <- "NorthwesternState"
View(Unmatched)
name_search("SIU", MTeams_sorted$TeamName)
#Found SIUE
MTeams_sorted[MTeams_sorted$TeamName == "SIUE",]
name_search("Illinois", MTeams_sorted$TeamName)
MTeams_sorted[MTeams_sorted$TeamName == "S Illinois",]
MTeams_sorted[MTeams_sorted$TeamName == "S Illinois","scores2"] <- "SouthernIllinois"
MTeams_sorted[MTeams_sorted$TeamName == "S Illinois",]
MTeams_sorted[MTeams_sorted$TeamName == "SIUE",]
MTeams_sorted[MTeams_sorted$TeamName == "SIUE",c("bartorvik", "scores")] <- c("SIU Edwardsville", "SIUEdwardsville")
MTeams_sorted[MTeams_sorted$TeamName == "SIUE",]
bartorvik3
teams_scores3
d <- Unmatched[Unmatched$TeamName %in% c("MTSU", "UTRGV", "PFW"),]
d
d$scores <- c("IPFW", "MiddleTennSt", "UTRioGrandeValley")
d$bartorvik <- c("Fort Wayne", "Middle Tennessee", "UT Rio Grande Valley")
d
d$v <- 0
d$v2 <- 0
d$scores2 <- NA
d
MTeams_sorted <- rbind(MTeams_sorted, d)
bartorvik4 <- bartorvik3[!(bartorvik3 %in% MTeams_sorted$bartorvik)]
teams_scores4 <- teams_scores3[!(teams_scores3 %in% MTeams_sorted$scores)]
teams_scores4 <- teams_scores4[!(teams_scores4 %in% MTeams_sorted$scores2)]
bartorvik3
bartorvik4
teams_scores4
#We still have 5 score team names to sort
list <- MTeams_sorted$TeamName
name_search("Tenn", list)
name_search("ETSU", list)
MTeams_sorted[MTeams_sorted$TeamName == "ETSU",]
MTeams_sorted[MTeams_sorted$TeamName == "ETSU","scores2"] <- "EastTennState"
name_search("Kentucky", list)
name_search("WK", list)
MTeams_sorted[MTeams_sorted$TeamName == "WKU",]
MTeams_sorted[MTeams_sorted$TeamName == "WKU", "scores"] <- "WesternKentucky"
name_search("Carolina", list)
name_search("NCAT", list)
name_search("NC", list)
MTeams_sorted[MTeams_sorted$TeamName == "NC A&T",]
MTeams_sorted[MTeams_sorted$TeamName == "NC A&T", "scores2"] <- "NorthCarolinaAT"
teams_scores4
MTeams_sorted$scores3 <- NA
MTeams_sorted[MTeams_sorted$TeamName == "NC A&T", "scores2"] <- "N.CarolinaA&T"
name_search("Long", list)
name_search("NY", list)
View(Unmatched)
name_search("LI", MTeams_sorted$scores)
name_search("LI", MTeams_sorted$bartorvik)
MTeams_sorted[MTeams_sorted$bartorvik == "LIU Brooklyn",]
MTeams_sorted[MTeams_sorted$bartorvik == "LIU Brooklyn", "scores"] <- "LongIsland"
teams_scores5 <- teams_scores5[!(teams_scores3 %in% MTeams_sorted$scores)]
teams_scores5 <- teams_scores4[!(teams_scores4 %in% MTeams_sorted$scores)]
teams_scores5 <- teams_scores5[!(teams_scores5 %in% MTeams_sorted$scores2)]
teams_scores5 <- teams_scores5[!(teams_scores5 %in% MTeams_sorted$scores3)]
teams_scores4
teams_scores5
MTeams_sorted[MTeams_sorted$TeamName == "NC A&T", "scores2"] <- "NorthCarolinaAT"
MTeams_sorted$scores3 <- NA
MTeams_sorted[MTeams_sorted$TeamName == "NC A&T", "scores2"] <- "N.CarolinaA&T"
MTeams_sorted[MTeams_sorted$TeamName == "NC A&T", "scores3"] <- "N.CarolinaA&T"
teams_scores5 <- teams_scores4[!(teams_scores4 %in% MTeams_sorted$scores)]
teams_scores5 <- teams_scores5[!(teams_scores5 %in% MTeams_sorted$scores2)]
teams_scores5 <- teams_scores5[!(teams_scores5 %in% MTeams_sorted$scores3)]
teams_scores5
MTeams_sorted[MTeams_sorted$TeamName == "NC A&T", "scores2"]
MTeams_sorted[MTeams_sorted$TeamName == "NC A&T", ]
MTeams_sorted[MTeams_sorted$TeamName == "NC A&T", "scores3"] <- "NorthCarolinaAT"
MTeams_sorted$scores3 <- NA
MTeams_sorted[MTeams_sorted$TeamName == "NC A&T", "scores2"] <- "N.CarolinaA&T"
teams_scores5 <- teams_scores4[!(teams_scores4 %in% MTeams_sorted$scores)]
teams_scores5 <- teams_scores5[!(teams_scores5 %in% MTeams_sorted$scores2)]
teams_scores5 <- teams_scores5[!(teams_scores5 %in% MTeams_sorted$scores3)]
teams_scores5
MTeams_sorted[MTeams_sorted$TeamName == "NC A&T", "scores3"] <- "NorthCarolinaAT"
teams_scores5 <- teams_scores4[!(teams_scores4 %in% MTeams_sorted$scores)]
teams_scores5 <- teams_scores5[!(teams_scores5 %in% MTeams_sorted$scores2)]
teams_scores5 <- teams_scores5[!(teams_scores5 %in% MTeams_sorted$scores3)]
teams_scores5
#We finish with 348 teams with IDs from the sorted data
write.table(MTeams_sorted, file = "TeamList2020-21.csv", col.names = T, row.names = F, sep = ",")
head(MTeams_sorted)
#We finish with 348 teams with IDs from the sorted data
MTeams_final <- MTeams_sorted[,c(1:6, 9,10)]
head(MTeams_final)
write.table(MTeams_final, file = "TeamList2021.csv", col.names = T, row.names = F, sep = ",")
file <- paste("TeamList", yr, ".csv", sep = "")
#Enter the year of the tournament for fitting the model
yr <- 2021
file <- paste("TeamList", yr, ".csv", sep = "")
file
teams
DTeams <- read.csv(file, header = TRUE, sep = ",")
head(DTeams)
DTeams[1,6:8]
7 %in% DTeams[1,6:8]
"AirForce" %in% DTeams[1,6:8]
"Drake" %in% DTeams[1,6:8]
scores_to_ID <- function(str){
indx <- DTeams$scores == str
if (sum(indx) == 1){
ID <- DTeams$TeamID[indx][1]
}
ID
}
scores_to_ID("AirForce")
length(unique(DTeams$scores))
n_occur <- data.frame(table(DTeams$scores))
summary(n_occur)
n_occur[n_occur$Var1 >1]
n_occur[n_occur$Var1 >1,]
n_occur[n_occur$Freq >1,]
#Make sure each column has no duplicates:
MTeams_final[duplicated(MTeams_final$TeamName),]
View(MTeams_final)
MTeams_final[MTeams_final$TeamID == 1146,]
MTeams_final <- MTeams_final[-2211,]
MTeams_final[-c("2211"),]
MTeams_final[c("2211"),]
MTeams_final[-c(2211),]
MTeams_final <- MTeams_final[-c(2211),]
duplicated(MTeams_final$TeamName)
#Make sure each column has no duplicates:
sum(duplicated(MTeams_final$TeamName))
MTeams_final <- MTeams_final[!duplicated(MTeams_final$TeamName),]
#Make sure each column has no duplicates:
sum(duplicated(MTeams_final$TeamName))
sum(duplicated(MTeams_final$bartorvik))
sum(duplicated(MTeams_final$scores))
MTeams_final[duplicated(MTeams_final$scores),]
dup_id <- MTeams_final[duplicated(MTeams_final$scores),"TeamID"]
MTeams_final[MTeams_final$TeamID %in% dup_id,]
dup_scores <- MTeams_final[duplicated(MTeams_final$scores),"scores"]
dup_scores
MTeams_final[MTeams_final$scores %in% dup_scores,]
MTeams_final[c("241", "304"),]
MTeams_final$scores3[1]
DTeams$scores3[1]
type(DTeams$scores3[1])
MTeams_final[c("241", "304"), "scores2"] <- c(NA, NA)
sum(duplicated(MTeams_final$scores))
MTeams_final[duplicated(MTeams_final$scores),"scores"]
dup_scores <- MTeams_final[duplicated(MTeams_final$scores),"scores"]
MTeams_final[MTeams_final$scores %in% dup_scores,]
MTeams_final[c("241", "304"), "scores"] <- c("DelawareState", "SanDiegoState")
MTeams_final[c("241", "304"), "scores2"] <- c(NA, NA)
sum(duplicated(MTeams_final$scores))
MTeams_final[c("241", "304"),]
D <- MTeams_final[!is.na(MTeams_final$scores2),]
sum(duplicated(D$scores2))
D <- MTeams_final[!is.na(MTeams_final$scores3),]
sum(duplicated(D$scores3))
#Now that duplicates are removed, we can save the file
write.table(MTeams_final, file = "TeamList2021.csv", col.names = T, row.names = F, sep = ",")
#Enter the year of the tournament for fitting the model
yr <- 2021
file <- paste("TeamList", yr, ".csv", sep = "")
View(scores)
scores_to_ID <- function(str){
indx <- DTeams$scores == str
if (sum(indx) == 1){
ID <- DTeams$TeamID[indx][1]
}else {
indx <- DTeams$scores2 == str
if (sum(indx) == 1){
ID <- DTeams$TeamID[1]
}else {
indx <- DTeams$scores3 == str
if (sum(indx) == 1){
ID <- DTeams$TeamID[1]
}else{
stop("Name not found")
}
}
}
ID
}
scores_to_ID("Deleware")
scores_to_ID <- function(str){
indx <- DTeams$scores == str
if (sum(indx) == 1){
ID <- DTeams$TeamID[indx][1]
}else {
indx <- DTeams$scores2 == str
if (sum(indx) == 1){
ID <- DTeams$TeamID[1]
}else {
indx <- DTeams$scores3 == str
if (sum(indx) == 1){
ID <- DTeams$TeamID[1]
}else{
stop("Name not found")
}
}
}
ID
}
scores_to_ID("Deleware")
str <- "Deleware"
indx <- DTeams$scores == str
sum(indx) == 1
indx <- DTeams$scores2 == str
sum(indx) == 1
indx <- DTeams$scores2 == str
sum(indx)
#Now that duplicates are removed, we can save the file
write.table(MTeams_final, file = "TeamList2021.csv", col.names = T, row.names = F, sep = ",")
#Remove NA
head(MTeams_final)
summary(MTeams_final)
indx <- is.na(MTeams_final$scores2)
sum(indx)
indx <- is.na(MTeams_final$scores)
sum(indx)
MTeams_final$scores2[indx] <- "none"
indx <- is.na(MTeams_final$scores3)
sum(indx)
MTeams_final$scores3[indx] <- "none"
#Remove NA
head(MTeams_final)
indx <- is.na(MTeams_final$scores2)
sum(indx)
MTeams_final$scores2[indx] <- "none"
#Remove NA
head(MTeams_final)
sum(duplicated(MTeams_final$bartorvik))
sum(duplicated(MTeams_final$scores))
#Now that duplicates are removed, we can save the file
write.table(MTeams_final, file = "TeamList2021.csv", col.names = T, row.names = F, sep = ",")
#Enter the year of the tournament for fitting the model
yr <- 2021
file <- paste("TeamList", yr, ".csv", sep = "")
DTeams <- read.csv(file, header = TRUE, sep = ",")
scores_to_ID <- function(str){
indx <- DTeams$scores == str
if (sum(indx) == 1){
ID <- DTeams$TeamID[indx][1]
}else {
indx <- DTeams$scores2 == str
if (sum(indx) == 1){
ID <- DTeams$TeamID[1]
}else {
indx <- DTeams$scores3 == str
if (sum(indx) == 1){
ID <- DTeams$TeamID[1]
}else{
stop("Name not found")
}
}
}
ID
}
str <- "Deleware"
scores_to_ID("Deleware")
str <- "Delaware"
scores_to_ID("Delaware")
head(DTeams)
scores_to_ID("AlabamaAM")
#Convert Bartorvik name to ID
bar_to_ID <- function(str){
indx <- DTeams$bartorvik == str
if (sum(indx) == 1){
ID <- DTeams$TeamID[indx][1]
ID
}else {
stop{"Name not found"}
}
}
#Convert Bartorvik name to ID
bar_to_ID <- function(str){
indx <- DTeams$bartorvik == str
if (sum(indx) == 1){
ID <- DTeams$TeamID[indx][1]
ID
}else {
stop{"Name not found"}
}
}
View(DTeams)
View(scores)
View(DTeams)
#Convert Bartorvik name to ID
bar_to_ID <- function(str){
indx <- DTeams$bartorvik == str
if (sum(indx) == 1){
ID <- DTeams$TeamID[indx][1]
ID
}else {
stop{"Name not found"}
}
}
#Convert Bartorvik name to ID
bar_to_ID <- function(str){
#Convert Bartorvik name to ID
bar_to_ID <- function(str){
indx <- DTeams$bartorvik == str
if (sum(indx) == 1){
ID <- DTeams$TeamID[indx][1]
ID
}else{
stop{"Name not found"}
}}
#Convert Bartorvik name to ID
bar_to_ID <- function(str){
indx <- DTeams$bartorvik == str
if(sum(indx) == 1){
ID <- DTeams$TeamID[indx][1]
ID
}else{
stop("Name not found")
}}
head(DTeams)
bar_to_ID("Arizona")
#Convert Name to ID
name_to_ID <- function(str){
indx <- DTeams$TeamName == str
if(sum(indx) == 1){
ID <- DTeams$TeamID[indx][1]
ID
}else{
stop("Name not found")
}}
name_to_ID("Alabama A&M")
#Convert ID to team
ID_to_name <- function(id){
indx <- DTeams$TeamID == id
if(sum(indx) == 1){
name <- DTeams$TeamName[indx][1]
name
}else{
stop("ID not found")
}}
View(scores)
L <- length(scores$Team)
C_ids <- as.character(rep(0,L))
scores$Team[1]
L <- length(scores$Team)
C_ids <- as.character(rep(0,L))
t0 <- Sys.time()
for (j in 1:L){
string <- scores$Team[j]
C_ids[j] <- scores_to_ID(string)
print(paste(j, "of", L, "IDs found"))
}
tf <- Sys.time()
print(tf -t0)
C_ids[1:10]
